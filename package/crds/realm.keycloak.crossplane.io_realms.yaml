---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: realms.realm.keycloak.crossplane.io
spec:
  group: realm.keycloak.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - keycloak
    kind: Realm
    listKind: RealmList
    plural: realms
    singular: realm
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Realm is the Schema for the Realms API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RealmSpec defines the desired state of Realm
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessCodeLifespan:
                    type: string
                  accessCodeLifespanLogin:
                    type: string
                  accessCodeLifespanUserAction:
                    type: string
                  accessTokenLifespan:
                    type: string
                  accessTokenLifespanForImplicitFlow:
                    type: string
                  accountTheme:
                    type: string
                  actionTokenGeneratedByAdminLifespan:
                    type: string
                  actionTokenGeneratedByUserLifespan:
                    type: string
                  adminTheme:
                    type: string
                  attributes:
                    additionalProperties:
                      type: string
                    type: object
                  browserFlow:
                    description: Which flow should be used for BrowserFlow
                    type: string
                  clientAuthenticationFlow:
                    description: Which flow should be used for ClientAuthenticationFlow
                    type: string
                  clientSessionIdleTimeout:
                    type: string
                  clientSessionMaxLifespan:
                    type: string
                  defaultDefaultClientScopes:
                    items:
                      type: string
                    type: array
                  defaultOptionalClientScopes:
                    items:
                      type: string
                    type: array
                  defaultSignatureAlgorithm:
                    type: string
                  directGrantFlow:
                    description: Which flow should be used for DirectGrantFlow
                    type: string
                  displayName:
                    type: string
                  displayNameHtml:
                    type: string
                  dockerAuthenticationFlow:
                    description: Which flow should be used for DockerAuthenticationFlow
                    type: string
                  duplicateEmailsAllowed:
                    type: boolean
                  editUsernameAllowed:
                    type: boolean
                  emailTheme:
                    type: string
                  enabled:
                    type: boolean
                  internalId:
                    type: string
                  internationalization:
                    items:
                      properties:
                        defaultLocale:
                          type: string
                        supportedLocales:
                          items:
                            type: string
                          type: array
                      required:
                      - defaultLocale
                      - supportedLocales
                      type: object
                    type: array
                  loginTheme:
                    type: string
                  loginWithEmailAllowed:
                    type: boolean
                  oauth2DeviceCodeLifespan:
                    type: string
                  oauth2DevicePollingInterval:
                    type: number
                  offlineSessionIdleTimeout:
                    type: string
                  offlineSessionMaxLifespan:
                    type: string
                  offlineSessionMaxLifespanEnabled:
                    type: boolean
                  otpPolicy:
                    items:
                      properties:
                        algorithm:
                          description: What hashing algorithm should be used to generate
                            the OTP.
                          type: string
                        digits:
                          type: number
                        initialCounter:
                          type: number
                        lookAheadWindow:
                          type: number
                        period:
                          type: number
                        type:
                          description: OTP Type, totp for Time-Based One Time Password
                            or hotp for counter base one time password
                          type: string
                      type: object
                    type: array
                  passwordPolicy:
                    description: 'String that represents the passwordPolicies that
                      are in place. Each policy is separated with " and ". Supported
                      policies can be found in the server-info providers page. example:
                      "upperCase(1) and length(8) and forceExpiredPasswordChange(365)
                      and notUsername(undefined)"'
                    type: string
                  realm:
                    type: string
                  refreshTokenMaxReuse:
                    type: number
                  registrationAllowed:
                    type: boolean
                  registrationEmailAsUsername:
                    type: boolean
                  registrationFlow:
                    description: Which flow should be used for RegistrationFlow
                    type: string
                  rememberMe:
                    type: boolean
                  resetCredentialsFlow:
                    description: Which flow should be used for ResetCredentialsFlow
                    type: string
                  resetPasswordAllowed:
                    type: boolean
                  revokeRefreshToken:
                    type: boolean
                  securityDefenses:
                    items:
                      properties:
                        bruteForceDetection:
                          items:
                            properties:
                              failureResetTimeSeconds:
                                type: number
                              maxFailureWaitSeconds:
                                type: number
                              maxLoginFailures:
                                type: number
                              minimumQuickLoginWaitSeconds:
                                type: number
                              permanentLockout:
                                type: boolean
                              quickLoginCheckMilliSeconds:
                                type: number
                              waitIncrementSeconds:
                                type: number
                            type: object
                          type: array
                        headers:
                          items:
                            properties:
                              contentSecurityPolicy:
                                type: string
                              contentSecurityPolicyReportOnly:
                                type: string
                              strictTransportSecurity:
                                type: string
                              xContentTypeOptions:
                                type: string
                              xFrameOptions:
                                type: string
                              xRobotsTag:
                                type: string
                              xXssProtection:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  smtpServer:
                    items:
                      properties:
                        auth:
                          items:
                            properties:
                              passwordSecretRef:
                                description: A SecretKeySelector is a reference to
                                  a secret key in an arbitrary namespace.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              username:
                                type: string
                            required:
                            - passwordSecretRef
                            - username
                            type: object
                          type: array
                        envelopeFrom:
                          type: string
                        from:
                          type: string
                        fromDisplayName:
                          type: string
                        host:
                          type: string
                        port:
                          type: string
                        replyTo:
                          type: string
                        replyToDisplayName:
                          type: string
                        ssl:
                          type: boolean
                        starttls:
                          type: boolean
                      required:
                      - from
                      - host
                      type: object
                    type: array
                  sslRequired:
                    description: 'SSL Required: Values can be ''none'', ''external''
                      or ''all''.'
                    type: string
                  ssoSessionIdleTimeout:
                    type: string
                  ssoSessionIdleTimeoutRememberMe:
                    type: string
                  ssoSessionMaxLifespan:
                    type: string
                  ssoSessionMaxLifespanRememberMe:
                    type: string
                  userManagedAccess:
                    type: boolean
                  verifyEmail:
                    type: boolean
                  webAuthnPasswordlessPolicy:
                    items:
                      properties:
                        acceptableAaguids:
                          items:
                            type: string
                          type: array
                        attestationConveyancePreference:
                          description: Either none, indirect or direct
                          type: string
                        authenticatorAttachment:
                          description: Either platform or cross-platform
                          type: string
                        avoidSameAuthenticatorRegister:
                          type: boolean
                        createTimeout:
                          type: number
                        relyingPartyEntityName:
                          type: string
                        relyingPartyId:
                          type: string
                        requireResidentKey:
                          description: Either Yes or No
                          type: string
                        signatureAlgorithms:
                          description: Keycloak lists ES256, ES384, ES512, RS256,
                            RS384, RS512, RS1 at the time of writing
                          items:
                            type: string
                          type: array
                        userVerificationRequirement:
                          description: Either required, preferred or discouraged
                          type: string
                      type: object
                    type: array
                  webAuthnPolicy:
                    items:
                      properties:
                        acceptableAaguids:
                          items:
                            type: string
                          type: array
                        attestationConveyancePreference:
                          description: Either none, indirect or direct
                          type: string
                        authenticatorAttachment:
                          description: Either platform or cross-platform
                          type: string
                        avoidSameAuthenticatorRegister:
                          type: boolean
                        createTimeout:
                          type: number
                        relyingPartyEntityName:
                          type: string
                        relyingPartyId:
                          type: string
                        requireResidentKey:
                          description: Either Yes or No
                          type: string
                        signatureAlgorithms:
                          description: Keycloak lists ES256, ES384, ES512, RS256,
                            RS384, RS512, RS1 at the time of writing
                          items:
                            type: string
                          type: array
                        userVerificationRequirement:
                          description: Either required, preferred or discouraged
                          type: string
                      type: object
                    type: array
                required:
                - realm
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RealmStatus defines the observed state of Realm.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
